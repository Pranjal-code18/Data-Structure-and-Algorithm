class Solution {
public:
   double findMedianSortedArrays(vector<int> &nums1, vector<int> &nums2)
{
	int n1 = nums1.size(), n2 = nums2.size(), k = 0, l1 = 0, l2 = 0, n = n1 + n2;
	int num[n / 2 + 1];
	while (l1 < n1 && l2 < n2 && k<=n/2)
	{
		if (nums1[l1] < nums2[l2])
			num[k++] = nums1[l1++];
		else
			num[k++] = nums2[l2++];
	}
	while (l1 < n1 && k<=n/2 )
		num[k++] = nums1[l1++];
	while (l2 < n2 && k<=n/2 )
		num[k++] = nums2[l2++];

	if (n % 2 == 0)
		return double(num[n / 2] + num[n / 2 - 1]) / 2;
	return double(num[n / 2]);
}
};
