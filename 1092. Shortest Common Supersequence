class Solution {
public:
    string SCS(string str1 , string str2 , int n , int m , int dp[][1001]){
        string res="";
        for(int i=0 ; i<n+1 ; i++){
            for(int j=0 ; j<m+1 ; j++){
                dp[i][j]=0;
            }
        }
        for(int i=1 ; i<n+1 ; i++){
            for(int j=1 ; j<m+1 ; j++){
                if(str1[i-1]==str2[j-1]){dp[i][j]=1+dp[i-1][j-1];}
                else{dp[i][j]=max(dp[i-1][j] , dp[i][j-1]);}
            }
        }
        int i=n,j=m;
        while(i>0 && j>0){
            if(str1[i-1]==str2[j-1]){
                res.push_back(str1[i-1]);
                i--;
                j--;
            }
            else{
                if(dp[i][j-1]>dp[i-1][j]){
                    res.push_back(str2[j-1]);
                    j--;
                }
                else{res.push_back(str1[i-1]);
                    i--;}
            }
        }
        while(j>0){
            res.push_back(str2[j-1]);
            j--;
        }
        while(i>0){
            res.push_back(str1[i-1]);
            i--;
        }
        reverse(res.begin(),res.end());
        return res;
    }
    string shortestCommonSupersequence(string str1, string str2) {
        int n=str1.length(),m=str2.length();
        int dp[1001][1001];
        for(int i=0  ;i<n ; i++){
            for(int j=0 ; j<m+1 ; j++){
                dp[i][j]=-1;
            }
        }
        return SCS(str1,str2,n,m,dp);
    }
};
